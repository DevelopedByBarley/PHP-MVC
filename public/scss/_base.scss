.pr-bg {
  background-color: $pr-bg;
}

.sc-bg {
  background-color: $sc-bg;
}



// SET background color by $colors IN _vars.scss
@each $name, $color in $colors {
  .bg-#{$name} {
    background-color: $color;
  }
}


// SET border-color  by $colors IN _vars.scss

@each $name, $color in $colors {
  .border-#{$name} {
    border-color: $color;
  }
}


// SET color  by $colors IN _vars.scss

@each $name, $color in $colors {
  .#{$name} {
    color: $color;
  }
}



// SET hover-bg  by $colors IN _vars.scss

@each $name, $color in $colors {
  .hover-bg-#{$name} {
    &:hover {
      background-color: $color; // Vagy m치s hover effektus
    }
  }
}


// SET hover-color  by $colors IN _vars.scss

@each $name, $color in $colors {
  .hover-#{$name} {
    &:hover {
      color: $color; // Vagy m치s hover effektus
    }
  }
}




// SET hover-border-color  by $colors IN _vars.scss

@each $name, $color in $colors {
  .hover-border-#{$name} {
    &:hover {
      border-color: $color; // Vagy m치s hover effektus
    }
  }
}

// SET transitions  by $transitions IN _vars.scss

@each $name, $transition in $transitions {
  .transition-#{$name} {

    transition: $transition; // Vagy m치s hover effektus

  }
}


// SET margins by $margins
@each $type, $values in $margins {
  @each $suffix, $size in $values {
    .#{$type}-#{$suffix} {
      @if ($type =="m") {
        margin: $size;
      }

      @else if ($type =="mt") {
        margin-top: $size;
      }

      @else if ($type =="mb") {
        margin-bottom: $size;
      }

      @else if ($type =="mr") {
        margin-right: $size;
      }

      @else if ($type =="ml") {
        margin-left: $size;
      }

      @else if ($type =="my") {
        margin-block: $size;
      }

      @else if ($type =="mx") {
        margin-inline: $size;
      }
    }
  }
}


// SET paddings by $paddings

@each $type, $values in $paddingValues {
  @each $suffix, $size in $values {
    .#{$type}-#{$suffix} {
      @if ($type =="p") {
        padding: $size;
      }

      @else if ($type =="pt") {
        padding-top: $size;
      }

      @else if ($type =="pb") {
        padding-bottom: $size;
      }

      @else if ($type =="pr") {
        padding-right: $size;
      }

      @else if ($type =="pl") {
        padding-left: $size;
      }

      @else if ($type =="py") {
        padding-block: $size;
      }

      @else if ($type =="px") {
        padding-inline: $size;
      }
    }
  }
}



.pr-font {
  font-family: $pr-font;
}

.sc-font {
  font-family: $sc-font;
  letter-spacing: 1.4px;
}


.skeleton {
  animation: skeleton-loading 1s linear infinite alternate;
  opacity: 0.7;

  &-text {
    width: 100%;
    height: 0.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0.125rem;
  }
}

@keyframes skeleton-loading {
  0% {
    background-color: hsl(200, 20%, 70%);
  }

  100% {
    background-color: hsl(200, 20%, 95%);
  }
}


[data-bs-theme=dark] nav {
  color: var(--bs-dark);
  background-color: map-get($colors, 'slate-500');
}

[data-bs-theme=light] nav {
  color: var(--bs-dark);
  background-color: map-get($colors, 'slate-100');
}